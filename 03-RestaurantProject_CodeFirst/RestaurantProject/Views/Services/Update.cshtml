@model RestaurantProject.Models.RestaurantService
@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="nav-align-top">
    <ul class="nav nav-pills flex-column flex-md-row mb-6">
        <li class="nav-item"><a class="nav-link active" href="javascript:void(0);"><i class="bx bx-sm bx-user me-1_5"></i> Services</a></li>
    </ul>
</div>
<div class="card mb-6">
    <form action="/Services/Update" method="post" enctype="multipart/form-data" class="fv-plugins-bootstrap5 fv-plugins-framework">
        <div class="card-body pt-4">
            <div class="row g-6">
                <div class="col-md-6">
                    <input type="hidden" name="RestaurantServiceId" value="@Model.RestaurantServiceId" />
                    <label for="Title" class="form-label">Title</label>
                    <input class="form-control" type="text" id="Title" name="Title" value="@Model.Title" placeholder="Title">
                </div>
                <div class="col-md-6">
                    <label for="Description" class="form-label">Description</label>
                    <input class="form-control" type="text" id="Description" name="Description" value="@Model.Description" placeholder="Description">
                </div>
                <div class="col-md-7 d-flex align-items-center">
                    <div class="flex-grow-1">
                        <input type="text" id="Icon" name="Icon" value="@Model.Icon" class="form-control iconpicker">
                    </div>
                    <div class="input-group-prepend me-2">
                        <span class="input-group-text h-100 selected-icon"></span>
                    </div>
                </div>
            </div>
            <div class="mt-6">
                <button type="submit" class="btn btn-primary me-3">Save changes</button>
                <button type="reset" class="btn btn-label-secondary">Cancel</button>
            </div>
            <input type="hidden">
        </div>
    </form>
</div>

<script src="/assets/bicon/iconpicker.js"></script>

<script>
    (async () => {
        const response = await fetch('/assets/bicon/iconsets/bootstrap5.json')
        const result = await response.json()


        const iconpicker = new Iconpicker(document.querySelector(".iconpicker"), {
            icons: result,
            showSelectedIn: document.querySelector(".selected-icon"),
            searchable: true,
            selectedClass: "selected",
            containerClass: "my-picker",
            hideOnSelect: true,
            fade: true,
            defaultValue: '@Model.Icon',
            valueFormat: val => `bi ${val}`
        });

        iconpicker.set() // Set as empty
        iconpicker.set('@Model.Icon') // Reset with a value
    })()
</script>